name: Build and Deploy revalyze landing

on:
  push:
    branches:
      - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: nickglas/revalyze_landing
      IMAGE_TAG: latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Check required GitHub secrets presence
        run: |
          secrets=(
            "${{ secrets.DOCKERHUB_TOKEN }}"
            "${{ secrets.DOCKERHUB_USERNAME }}"
            "${{ secrets.VPS_HOST }}"
            "${{ secrets.VPS_SSH_KEY }}"
            "${{ secrets.VPS_USER }}"
          )
          secret_names=(
            "DOCKERHUB_TOKEN"
            "DOCKERHUB_USERNAME"
            "VPS_HOST"
            "VPS_SSH_KEY"
            "VPS_USER"
          )

          missing=0
          for i in "${!secrets[@]}"; do
            if [ -z "${secrets[$i]}" ]; then
              echo "::error::Secret ${secret_names[$i]} is NOT set!"
              missing=$((missing+1))
            fi
          done

          if [ $missing -ne 0 ]; then
            echo "Missing $missing required secret(s). Failing workflow."
            exit 1
          else
            echo "All required secrets are set."
          fi

      - name: Build Vite React app
        run: npm run build

      - name: Get current git commit hash
        id: git-info
        run: echo "RUN_ID=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          build-args: |
            RUN_ID=${{ steps.git-info.outputs.RUN_ID }}
          platforms: linux/amd64

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Clone/update landing repo
            if [ ! -d "/home/ubuntu/revalyze_landing/.git" ]; then
              git clone https://github.com/nickglas/revalyze_landing.git /home/ubuntu/revalyze_landing && cd /home/ubuntu/revalyze_landing
            else
              cd /home/ubuntu/revalyze_landing && git pull origin main
            fi

            # Setup namespace if needed
            microk8s.kubectl create namespace revalyze --dry-run=client -o yaml | microk8s.kubectl apply -f -

            # Apply manifests from local files
            microk8s.kubectl apply -f k8s/revalyze_landing-deployment.yaml
            microk8s.kubectl apply -f k8s/revalyze_landing-service.yaml
            microk8s.kubectl apply -f k8s/ingress.yaml

            # Restart deployment
            microk8s.kubectl rollout restart deployment/revalyze_landing -n revalyze
